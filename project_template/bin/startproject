#!/usr/bin/python
import os, shutil, sys
from subprocess import call

#BIN=`dirname $0`
#TEMPLATE_PATH=/tmp/deploy/project_template
#PROJECT=$1

temp_dir = '/tmp/deploy'
repository_url = 'git://github.com/Proteus-tech/deploy.git' 

def clone_project():
    if os.path.exists(temp_dir):
        shutil.rmtree(temp_dir)
    call(["git", "clone", repository_url, "-b", "develop", temp_dir])
    
def move_files_into_build():
    """
    When Django is starting project, file *.py which contains 
    {{ project_name }} would be rendered. In order to make others
    scripts such as runtests also be rendered, we need to create
    a temporary `build` package to trick django to render them.
    """
    template_path = os.path.join('/', 'tmp', 'deploy', 'project_template')
    build_root = os.path.join(template_path, 'build')
    build_buildbot = os.path.join(build_root, 'buildbot')
    os.makedirs(build_root)
    os.makedirs(build_buildbot)
    call(["touch", os.path.join(build_root, '__init__.py')])
    call(["touch", os.path.join(build_buildbot, '__init__.py')])

    src = os.path.join(template_path, 'runtests')
    dst = os.path.join(build_root, 'runtests.py')
    shutil.move(src, dst)
    
    src = os.path.join(template_path, 'buildbot', 'master.cfg')
    dst = os.path.join(build_root, 'buildbot', 'master.cfg.py')
    shutil.move(src, dst)

def create_project(project_name, template_path):
    template_option = "--template=%s" % template_path
    print 'template_option = ', template_option
    #$BIN/python $BIN/django-admin.py startproject $1 --template=$TEMPLATE_PATH
    django.core.management.execute_from_command_line(["django-admin.py", "startproject", project_name, template_option])
    
def move_files_out_of_build():
    #mv $PROJECT/build/runtests.py $PROJECT/runtests
    #mv $PROJECT/build/buildbot/master.cfg.py $PROJECT/build/master.cfg
    #rm -rf $PROJECT/build 
    pass

def cleanup():
    shutil.rmtree(temp_dir)
    
if __name__ == '__main__':
    print 'cloning project template from %s (develop)' % repository_url
    clone_project()
    move_files_into_build()
    print 'creating project %s' % sys.argv[1]
    project_name = sys.argv[1]
    template_path = os.path.join(temp_dir, 'project_template')
    create_project(project_name, template_path)
    move_files_out_of_build()
    print 'cleanup..'
    cleanup()
    print 'success!'

